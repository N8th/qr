function getRandomElement(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

function getRandomDate(startYear, endYear) {
  const startDate = new Date(startYear, 0, 1);
  const endDate = new Date(endYear, 11, 31);
  return new Date(
    startDate.getTime() +
      Math.random() * (endDate.getTime() - startDate.getTime())
  );
}

function formatDate(date) {
  return date.toISOString().split("T")[0];
}

function generateSerialNumber(prefix) {
  return prefix + Math.random().toString().slice(2, 8);
}

function generateProduct() {
  const firstNames = [
    "John",
    "Jane",
    "Alice",
    "Bob",
    "Carol",
    "Dave",
    "Eve",
    "Frank",
    "Grace",
    "Hank",
    "Ivy",
    "Jack",
    "Karen",
    "Leo",
    "Mia",
    "Nick",
    "Olivia",
    "Paul",
    "Quincy",
    "Rose",
    "Sam",
    "Tina",
    "Uma",
    "Vince",
    "Wendy",
    "Xander",
    "Yara",
    "Zane",
    "Ava",
    "Ethan",
    "Isabella",
    "Joshua",
    "Megan",
    "Nathan",
    "Sophia",
    "Tyler",
    "Victoria",
    "William",
    "Zoe",
    "Brian",
    "Chloe",
    "Dylan",
    "Ella",
    "Felix",
    "Gina",
    "Harvey",
    "Iris",
    "Justin",
    "Kelsey",
    "Liam",
    "Molly",
    "Nolan",
    "Oliver",
    "Penny",
    "Quinn",
    "Riley",
    "Stella",
    "Travis",
    "Ulysses",
    "Vanessa",
    "Walter",
    "Xenia",
    "Yvonne",
    "Zach",
  ];
  const lastNames = [
    "Smith",
    "Johnson",
    "Brown",
    "Taylor",
    "Anderson",
    "Harris",
    "Clark",
    "Lewis",
    "Robinson",
    "Walker",
    "Martinez",
    "Davis",
    "Garcia",
    "Rodriguez",
    "Wilson",
    "Martinez",
    "Hernandez",
    "Lopez",
    "Gonzalez",
    "Perez",
    "Young",
    "Hall",
    "Allen",
    "Sanchez",
    "Wright",
    "King",
    "Scott",
    "Green",
    "Baker",
    "Adams",
    "Nelson",
    "Hill",
    "Ramirez",
    "Campbell",
    "Mitchell",
    "Roberts",
    "Carter",
    "Phillips",
    "Evans",
    "Turner",
    "Torres",
    "Parker",
    "Collins",
    "Edwards",
    "Stewart",
    "Flores",
    "Morris",
    "Nguyen",
    "Murphy",
    "Rivera",
  ];
  const brands = [
    "Lenovo",
    "HP",
    "Dell",
    "Acer",
    "Asus",
    "Samsung",
    "Toshiba",
    "Microsoft",
    "Apple",
    "Sony",
    "LG",
    "Panasonic",
    "Huawei",
    "Xiaomi",
    "Google",
    "Alienware",
    "Razer",
    "MSI",
    "Intel",
    "AMD",
    "Nvidia",
    "Cisco",
    "Brother",
    "Epson",
    "Sharp",
    "Fujitsu",
    "Lexmark",
    "Ricoh",
    "Kyocera",
    "Kodak",
  ];
  const types = [
    "desktop",
    "laptop",
    "printer",
    "server",
    "tablet",
    "workstation",
    "monitor",
    "router",
    "switch",
    "access point",
    "NAS",
    "keyboard",
    "mouse",
    "webcam",
    "headset",
    "speaker",
    "microphone",
    "VR headset",
    "gaming console",
    "smartphone",
    "smartwatch",
    "drone",
    "projector",
    "scanner",
    "graphics card",
    "motherboard",
    "CPU",
    "PSU",
    "RAM",
    "SSD",
  ];
  const conditions = [
    "New",
    "Excellent",
    "Good",
    "Fair",
    "Poor",
    "Used",
    "Refurbished",
    "Like New",
    "Very Good",
    "Mint",
    "Slightly Used",
    "Well Used",
    "Damaged",
    "Functional",
    "Non-functional",
    "For Parts",
    "Vintage",
    "Collector's Item",
    "Rare",
    "Limited Edition",
    "Custom",
    "Modified",
    "Upgraded",
    "Downgraded",
    "Overclocked",
    "Undervolted",
    "Water Damaged",
    "Burn-In",
  ];
  const notes = [
    "",
    "Software issues",
    "Dents",
    "Scratches",
    "Battery problems",
    "Missing cables",
    "Updated OS",
    "Warranty included",
    "No charger",
    "No box",
    "Custom firmware",
    "Rooted",
    "Jailbroken",
    "Unlocked",
    "Locked to carrier",
    "International version",
    "Regional lock",
    "Bulk packaging",
    "Retail packaging",
    "Demo unit",
    "Returned item",
    "Discontinued model",
    "Overstock",
    "Clearance",
    "Sale item",
    "Promotional item",
    "Gift",
    "Sample",
    "Prototype",
    "Recalled",
  ];

  return {
    qrId: "QR" + Math.random().toString().slice(2, 6),
    partNumber:
      getRandomElement(types) + "-" + Math.random().toString(36).slice(2, 5),
    serialNumber: generateSerialNumber(getRandomElement(brands).charAt(0)),
    name:
      getRandomElement(brands) +
      " " +
      getRandomElement(types).charAt(0).toUpperCase() +
      getRandomElement(types).slice(1) +
      " " +
      Math.floor(Math.random() * 100),
    lastOwner: getRandomElement(firstNames) + " " + getRandomElement(lastNames),
    location: "C Floor " + Math.floor(Math.random() * 5 + 1),
    quantity: Math.floor(Math.random() * 5 + 1),
    condition: getRandomElement(conditions),
    price: "$USD " + (Math.floor(Math.random() * 701) + 300),
    category: getRandomElement(types),
    purchaseDate: formatDate(getRandomDate(2018, 2022)),
    warrantyExpiry: formatDate(getRandomDate(2023, 2025)),
    notes: getRandomElement(notes),
  };
}

function generateProducts(num) {
  return Array.from({ length: num }, generateProduct);
}

const numEntries = 25;
const products = generateProducts(numEntries);
console.log(JSON.stringify(products, null, 2));
